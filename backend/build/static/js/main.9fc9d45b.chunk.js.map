{"version":3,"sources":["components/Button.js","reducers/notificationReducer.js","services/todos.js","services/projects.js","reducers/todosReducer.js","services/login.js","reducers/userReducer.js","components/InputText.js","reducers/activeTodoReducer.js","reducers/projectsReducer.js","components/UserForm.js","components/ProjectForm.js","components/Project.js","reducers/selectedProjectReducer.js","components/LeftSide.js","components/Notification.js","components/TodoForm.js","components/Todo.js","components/TodoList.js","components/Todos.js","components/RightSide.js","App.js","store.js","index.js"],"names":["ButtonElement","styled","button","props","fontSize","important","Button","type","onClick","children","giveNotification","msg","dispatch","a","setTimeout","reducer","state","action","token","setToken","foundToken","userJson","window","localStorage","getItem","JSON","parse","getAllMine","config","headers","Authorization","axios","get","response","data","createOne","title","project","post","deleteOne","id","delete","then","res","updateOne","todo","patch","newToken","initTodos","todoService","todos","updateTodo","filter","map","user","console","log","loginUser","loginService","loggedUser","setItem","stringify","error","initialState","name","username","Input","input","InputText","placeholder","clearState","description","projects","p","UserForm","useDispatch","useState","expanded","setExpanded","loggedIn","setLoggedIn","creating","setCreating","useEffect","handleLogin","e","preventDefault","target","value","password","Object","keys","length","removeItem","onSubmit","password2","createdUser","htmlFor","ProjectForm","projectService","Li","li","isActive","Project","handleSelect","handleDelete","Div","div","H2","h2","Ul","ul","LeftSide","useSelector","selectProject","deleteProject","selectedProject","key","Notification","notification","TodoForm","loggedUserJson","createTodo","completed","Todo","setActive","style","gridArea","onChange","checked","TodoList","deleteTodo","activeTodo","TransitionGroup","component","CSSTransition","timeout","classNames","setActiveTodo","Todos","DivDescription","Textarea","textarea","RightSide","setDescription","clearTimeout","DivFlex","App","store","createStore","combineReducers","todosReducer","userReducer","notificationReducer","activeTodoReducer","projectsReducer","selectedProjectReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fc9d45b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonElement = styled.button`\r\n  font-family: 'Roboto Condensed';\r\n  padding: 0.4rem 0.6rem;\r\n  box-shadow: 1px 2px 10px #ddd;\r\n  border-radius: 4px;\r\n  font-weight: 600;\r\n  font-size: ${(props) =>\r\n    props.fontSize ? `${props.fontSize}rem` : '0.88rem'};\r\n  background: hsl(0, 0%, 98%);\r\n\r\n  border: 1px solid ${(props) => (props.important ? '#FF007F' : '#dedede')};\r\n  color: ${(props) => (props.important ? '#FF007F' : '#222')};\r\n  text-shadow: ${(props) => (props.important ? '0px 0px 1px  #FF007F' : '')};\r\n`;\r\n\r\nconst Button = ({ type, onClick, children, important, fontSize }) => {\r\n  return (\r\n    <ButtonElement\r\n      fontSize={fontSize}\r\n      important={important}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </ButtonElement>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// action creators\r\nexport const giveNotification = (msg) => {\r\n  return async (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch({ type: 'RESET' });\r\n    }, 5000);\r\n    dispatch({\r\n      type: 'GIVE',\r\n      msg,\r\n    });\r\n  };\r\n};\r\n\r\n//reducer\r\nconst reducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'GIVE':\r\n      return action.msg;\r\n    case 'RESET':\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/todos';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (foundToken) => {\r\n  token = `bearer ${foundToken}`;\r\n};\r\n\r\nconst userJson = window.localStorage.getItem('loggedTodoAppUser');\r\nif (userJson) {\r\n  setToken(JSON.parse(userJson).token);\r\n}\r\n\r\n// const getAll = () => {\r\n//   const response = axios.get(baseUrl);\r\n//   return response.then((res) => res.data);\r\n// };\r\n\r\nconst getAllMine = async () => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.get(baseUrl, config);\r\n  return response.data;\r\n};\r\n\r\nconst createOne = async ({ title, project }) => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.post(baseUrl, { title, project }, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteOne = (id) => {\r\n  const response = axios.delete(`${baseUrl}/${id}`, { id });\r\n  return response.then((res) => res.data);\r\n};\r\n\r\nconst updateOne = (todo) => {\r\n  const response = axios.patch(`${baseUrl}/${todo.id}`, todo);\r\n  return response.then((res) => res.data);\r\n};\r\n\r\nexport default {\r\n  // getAll,\r\n  getAllMine,\r\n  createOne,\r\n  deleteOne,\r\n  updateOne,\r\n  setToken,\r\n};\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/projects';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAllMine = async () => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.get(baseUrl, config);\r\n  return response.data;\r\n};\r\n\r\nconst createOne = async (title) => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.post(baseUrl, { title }, config);\r\n  return response.data;\r\n};\r\n\r\nconst deleteOne = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  getAllMine,\r\n  createOne,\r\n  deleteOne,\r\n};\r\n","import todoService from '../services/todos';\r\nimport projectService from '../services/projects'; // for token init\r\n\r\n// action creators\r\nexport const initTodos = () => {\r\n  return async (dispatch) => {\r\n    const todos = await todoService.getAllMine();\r\n    dispatch({\r\n      type: 'INIT_TODOS',\r\n      todos,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createTodo = ({ title, project }) => {\r\n  return async (dispatch) => {\r\n    const todo = await todoService.createOne({ title, project });\r\n    dispatch({\r\n      type: 'CREATE_TODO',\r\n      todo,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n  return async (dispatch) => {\r\n    todoService.deleteOne(id);\r\n    dispatch({\r\n      type: 'DELETE_TODO',\r\n      id,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateTodo = (todo) => {\r\n  return async (dispatch) => {\r\n    todoService.updateOne(todo);\r\n    dispatch({\r\n      type: 'UPDATE_TODO',\r\n      todo,\r\n    });\r\n  };\r\n};\r\n\r\nexport const cleanList = () => {\r\n  return {\r\n    type: 'CLEAN_LIST',\r\n  };\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_TODO':\r\n      return [...state, action.todo];\r\n    case 'DELETE_TODO':\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case 'UPDATE_TODO':\r\n      return state.map((todo) =>\r\n        todo.id !== action.todo.id ? todo : action.todo\r\n      );\r\n    case 'CLEAN_LIST':\r\n      return [];\r\n    case 'INIT_TODOS':\r\n      return action.todos;\r\n    // case 'INIT_TOKEN':\r\n    //   todoService.setToken(action.token);\r\n    //   console.log('TOKEN:::r: ', action.token);\r\n    //   return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\n\r\n// it says login but it's also for creating users :)\r\n\r\nconst baseUrl = '';\r\n\r\nconst loginUser = (user) => {\r\n  const response = axios.post(`${baseUrl}/api/login`, user);\r\n  return response.then((res) => res.data);\r\n};\r\n\r\nconst createUser = (user) => {\r\n  const response = axios.post(`${baseUrl}/api/users`, user);\r\n  return response.then((res) => {\r\n    console.log('RES:DATA: ', res.data);\r\n    return res.data;\r\n  });\r\n};\r\n\r\nexport default { loginUser, createUser };\r\n","import loginService from '../services/login';\r\nimport todoService from '../services/todos';\r\n\r\n// action creators\r\n// login user, state will only hold \"name\" and \"username\"\r\nexport const loginUser = (user) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // loginService.loginUser may throw an error, so we in try/catch\r\n      const loggedUser = await loginService.loginUser(user);\r\n      window.localStorage.setItem(\r\n        'loggedTodoAppUser',\r\n        JSON.stringify(loggedUser)\r\n      );\r\n      todoService.setToken(loggedUser.token);\r\n      dispatch({\r\n        type: 'LOGIN',\r\n        user: loggedUser,\r\n      });\r\n      return {}; // for when we check lenght to see if there are errors\r\n    } catch (err) {\r\n      console.log('Error in userreducer: ', err);\r\n      return { error: 'Invalid credentials' };\r\n    }\r\n  };\r\n};\r\n// logout user\r\nexport const logoutUser = () => {\r\n  window.localStorage.removeItem('loggedTodoAppUser');\r\n  todoService.setToken(null);\r\n  return {\r\n    type: 'LOGOUT',\r\n  };\r\n};\r\n// verify user, this for checking if the user is in localstate\r\n// if it's an actual user in a database. will be run on refreshes and such\r\n// HAVEN'T USED YET, so i dont't think it's gonna be here for much longer...\r\nexport const verifyUser = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'VERIFY',\r\n      user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createUser = (user) => {\r\n  return async (dispatch) => {\r\n    const createdUser = await loginService.createUser(user);\r\n    console.log('WTF2, createdUser: ', createdUser);\r\n    dispatch({\r\n      type: 'CREATE',\r\n      user: { name: createdUser.name, username: createdUser.username },\r\n    });\r\n  };\r\n};\r\n\r\nexport const initUser = () => {\r\n  return async (dispatch) => {\r\n    const userJson = window.localStorage.getItem('loggedTodoAppUser');\r\n    if (userJson) {\r\n      const { name, username, token } = JSON.parse(userJson);\r\n      dispatch({\r\n        type: 'INIT',\r\n        user: { name, username },\r\n        token,\r\n      });\r\n      // if user is logged in or not, we return true/false for setLoggedIn in userForm\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\n//reducer\r\nconst initialState = { name: '', username: '' };\r\n// state not being null \"maaaaybee\" could break some stuff,\r\n// i forgot if it needed to be null\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return action.user;\r\n    case 'LOGOUT':\r\n      return initialState;\r\n    case 'INIT':\r\n      todoService.setToken(action.token);\r\n      return action.user;\r\n    case 'CREATE':\r\n      return state; // we need user to login for token\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI',\r\n    Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n  padding: 0.4rem 0.6rem;\r\n  margin-bottom: 0.5rem;\r\n  width: 100%;\r\n  border: 1px solid #dedede;\r\n  border-radius: 4px;\r\n  color: #333;\r\n  background-color: hsl(0, 0%, 98%);\r\n  box-shadow: 1px 2px 6px #ddd;\r\n  outline: none;\r\n`;\r\n\r\nconst InputText = ({ type, id, name, placeholder }) => {\r\n  return <Input type={type} id={id} name={name} placeholder={placeholder} />;\r\n};\r\n\r\nexport default InputText;\r\n","// actions\r\nexport const setActiveTodo = (todo) => {\r\n  return {\r\n    type: 'SET',\r\n    todo,\r\n  };\r\n};\r\n\r\nexport const resetActiveTodo = () => {\r\n  return {\r\n    type: 'RESET',\r\n  };\r\n};\r\n\r\n// reducer\r\nconst clearState = { title: '', important: '', description: '', id: 0 };\r\nconst reducer = (state = clearState, action) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return action.todo;\r\n    case 'RESET':\r\n      return clearState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import projectService from '../services/projects';\r\n\r\n// actions\r\nexport const getProjects = () => {\r\n  return async (dispatch) => {\r\n    const projects = await projectService.getAllMine();\r\n    dispatch({\r\n      type: 'GET',\r\n      projects,\r\n    });\r\n  };\r\n};\r\n\r\nexport const addProject = (title) => {\r\n  return async (dispatch) => {\r\n    const project = await projectService.createOne(title);\r\n    dispatch({\r\n      type: 'ADD',\r\n      project,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteProject = (id) => {\r\n  return async (dispatch) => {\r\n    await projectService.deleteOne(id);\r\n    dispatch({\r\n      type: 'DELETE',\r\n      id,\r\n    });\r\n  };\r\n};\r\n\r\nexport const clearProjects = () => {\r\n  return {\r\n    type: 'CLEAR',\r\n  };\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET':\r\n      return action.projects;\r\n    case 'ADD':\r\n      return [...state, action.project];\r\n    case 'DELETE':\r\n      return state.filter((p) => p.id !== action.id);\r\n    case 'CLEAR':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from './Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { giveNotification } from '../reducers/notificationReducer';\r\nimport { cleanList, initTodos } from '../reducers/todosReducer';\r\nimport {\r\n  createUser,\r\n  initUser,\r\n  loginUser,\r\n  logoutUser,\r\n} from '../reducers/userReducer';\r\nimport InputText from './InputText';\r\nimport { resetActiveTodo } from '../reducers/activeTodoReducer';\r\nimport { clearProjects } from '../reducers/projectsReducer';\r\n\r\n// currently accounts can be only created through requests\r\nconst UserForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState();\r\n  const [creating, setCreating] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(initUser()).then((res) => {\r\n      setLoggedIn(res);\r\n    });\r\n  }, [dispatch]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const username = e.target.username.value;\r\n    const password = e.target.password.value;\r\n\r\n    const result = dispatch(loginUser({ username, password }));\r\n\r\n    result.then((res) => {\r\n      // if length is 0, no error was sent\r\n      if (Object.keys(res).length === 0) {\r\n        dispatch(initTodos());\r\n        setExpanded(false);\r\n        setLoggedIn(true);\r\n        return dispatch(giveNotification(`${username} logged in`));\r\n      }\r\n      dispatch(giveNotification(res.error));\r\n    });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n    dispatch(cleanList());\r\n    dispatch(resetActiveTodo());\r\n    dispatch(clearProjects());\r\n    setLoggedIn(false);\r\n  };\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.name.value;\r\n    const username = e.target.username.value;\r\n    const password = e.target.password.value;\r\n    const password2 = e.target.password2.value;\r\n    if (password !== password2) {\r\n      return dispatch(giveNotification(\"Passwords don't match!\"));\r\n    }\r\n    dispatch(createUser({ name, username, password }));\r\n    dispatch(giveNotification(`User \"${username}\" created!`));\r\n    setCreating(false);\r\n    e.target.name.value = '';\r\n    e.target.username.value = '';\r\n    e.target.password.value = '';\r\n    e.target.password2.value = '';\r\n  };\r\n\r\n  if (loggedIn) {\r\n    return <Button onClick={handleLogout}>logout</Button>;\r\n  } else {\r\n    return expanded ? (\r\n      creating ? (\r\n        // create user form\r\n        <form onSubmit={handleCreate}>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <InputText type=\"text\" id=\"name\" name=\"name\" />\r\n          <br />\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <InputText type=\"text\" id=\"username\" name=\"username\" />\r\n          <br />\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <InputText type=\"password\" id=\"password\" name=\"password\" />\r\n          <br />\r\n          <label htmlFor=\"password2\">Repeat password:</label>\r\n          <InputText type=\"password\" id=\"password2\" name=\"password2\" />\r\n          <br />\r\n          <Button type=\"submit\">create</Button>{' '}\r\n          <Button type=\"button\" onClick={() => setCreating(false)}>\r\n            cancel\r\n          </Button>\r\n        </form>\r\n      ) : (\r\n        // sign up form\r\n        <form onSubmit={handleLogin}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <InputText type=\"text\" id=\"username\" name=\"username\" />\r\n          <br />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <InputText type=\"password\" id=\"password\" name=\"password\" />\r\n          <br />\r\n          <Button type=\"submit\">login</Button>{' '}\r\n          <Button type=\"button\" onClick={() => setExpanded(!expanded)}>\r\n            cancel\r\n          </Button>{' '}\r\n          <Button type=\"button\" onClick={() => setCreating(true)}>\r\n            Create\r\n          </Button>\r\n        </form>\r\n      )\r\n    ) : (\r\n      <Button type=\"button\" onClick={() => setExpanded(!expanded)}>\r\n        login\r\n      </Button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default UserForm;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProject } from '../reducers/projectsReducer';\r\nimport InputText from './InputText';\r\n\r\nconst ProjectForm = () => {\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addProject(e.target.project.value));\r\n    console.log('handleSubmit projectform');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"project\"></label>\r\n      <InputText\r\n        id=\"project\"\r\n        name=\"project\"\r\n        placeholder=\"Add project (enter)\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Li = styled.li`\r\n  width: 100%;\r\n  background: #fff;\r\n  padding: 0.2rem 0.5rem;\r\n  margin: 0.25rem 0;\r\n  border-radius: 6px;\r\n  box-shadow: 0px 1px 5px #ccc;\r\n  text-align: left;\r\n  border: 2px solid ${(props) => (props.isActive ? '#2081C3' : 'transparent')};\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  transition: border 200ms ease;\r\n  &:hover {\r\n    border: 2px solid #2081c3;\r\n  }\r\n`;\r\n\r\nconst Project = ({ id, children, handleSelect, handleDelete, isActive }) => {\r\n  return (\r\n    <Li isActive={isActive} onClick={handleSelect}>\r\n      <p>{children}</p>\r\n      {id !== 0 && <Button onClick={handleDelete}>del</Button>}\r\n    </Li>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","// action\r\nexport const selectProject = (id) => {\r\n  return {\r\n    type: 'SELECT',\r\n    id,\r\n  };\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case 'SELECT':\r\n      return action.id;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport UserForm from './UserForm';\r\nimport ProjectForm from './ProjectForm';\r\nimport Project from './Project';\r\nimport { deleteProject, getProjects } from '../reducers/projectsReducer';\r\nimport projectService from '../services/projects';\r\nimport { selectProject } from '../reducers/selectedProjectReducer';\r\n\r\nconst Div = styled.div`\r\n  padding: 0.5rem;\r\n  min-width: 180px;\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  margin: 0.75rem 0 0 0;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  border-top: 2px solid #78d5d7;\r\n\r\n  & > li:first-child {\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst LeftSide = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const userJson = window.localStorage.getItem('loggedTodoAppUser');\r\n    if (userJson) {\r\n      const token = JSON.parse(userJson).token;\r\n      projectService.setToken(token);\r\n    }\r\n    dispatch(getProjects());\r\n  }, [dispatch]);\r\n\r\n  const projects = useSelector((state) => state.projects);\r\n\r\n  const handleSelect = (id) => {\r\n    dispatch(selectProject(id));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteProject(id));\r\n  };\r\n\r\n  const selectedProject = useSelector((state) => state.selectedProject);\r\n  const isActive = (id) => selectedProject === id;\r\n\r\n  return (\r\n    <Div>\r\n      <H2>Projects</H2>\r\n      <ProjectForm />\r\n      <Ul>\r\n        <Project id={0} handleSelect={() => handleSelect(0)}>\r\n          All\r\n        </Project>\r\n        {projects.map((p) => (\r\n          <Project\r\n            handleSelect={() => handleSelect(p.id)}\r\n            handleDelete={() => handleDelete(p.id)}\r\n            key={p.id}\r\n            isActive={isActive(p.id)} // this kinda makes no sense but it works if its not a callback\r\n          >\r\n            {p.title}\r\n          </Project>\r\n        ))}\r\n      </Ul>\r\n      <UserForm />\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default LeftSide;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Notification = ({ type }) => {\r\n  const msg = useSelector((state) => state.notification);\r\n  return (\r\n    <div>\r\n      <h3>{msg}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createTodo } from '../reducers/todosReducer';\r\nimport todoService from '../services/todos';\r\nimport InputText from './InputText';\r\n\r\nconst TodoForm = () => {\r\n  const dispatch = useDispatch();\r\n  const selectedProject = useSelector((state) => state.selectedProject);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const loggedUserJson = window.localStorage.getItem('loggedTodoAppUser');\r\n\r\n    if (loggedUserJson) {\r\n      const loggedUser = JSON.parse(loggedUserJson);\r\n      todoService.setToken(loggedUser.token);\r\n      dispatch(\r\n        createTodo({ title: e.target.title.value, project: selectedProject })\r\n      );\r\n      e.target.title.value = '';\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputText\r\n          name=\"title\"\r\n          placeholder='Add a todo item, press \"Enter\" to save'\r\n        />\r\n        {/* <Button type=\"submit\">add</Button> */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { updateTodo } from '../reducers/todosReducer';\r\nimport Button from './Button';\r\n\r\nconst Li = styled.li`\r\n  padding: 0.2rem 0 0.2rem 0.5rem;\r\n  margin: 0.25rem 0;\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  border: 2px solid ${(props) => (props.isActive() ? '#63d2ff' : 'transparent')};\r\n  font-family: 'Open Sans';\r\n\r\n  display: grid;\r\n  grid-row-gap: 0.1rem;\r\n  grid-template-columns: repeat(5, 1fr) minmax(60px, 80px);\r\n  grid-template-areas: 'text text text text text buttons';\r\n\r\n  box-shadow: 0px 1px 5px #ccc;\r\n\r\n  transition: border ease 200ms;\r\n  &:hover {\r\n    border: 2px solid #63d2ff;\r\n  }\r\n\r\n  & > p {\r\n    display: flex;\r\n    align-items: center;\r\n    & > input {\r\n      margin-right: 0.5rem;\r\n    }\r\n    color: ${(props) => (props.completed ? '#aaa' : '#222')};\r\n    font-style: ${(props) => (props.completed ? 'italic' : '')};\r\n    text-decoration: ${(props) => (props.completed ? 'line-through' : '')};\r\n  }\r\n`;\r\nconst Todo = ({ todo, handleDelete, setActive, isActive }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCheck = () => {\r\n    dispatch(updateTodo({ ...todo, completed: !todo.completed }));\r\n  };\r\n\r\n  const handleImporantClick = () => {\r\n    dispatch(updateTodo({ ...todo, important: !todo.important }));\r\n  };\r\n\r\n  return (\r\n    <Li isActive={isActive} completed={todo.completed} onClick={setActive}>\r\n      <p style={{ gridArea: 'text' }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={handleCheck}\r\n          checked={todo.completed ? true : false}\r\n        />\r\n        {todo.title}\r\n      </p>{' '}\r\n      <div style={{ gridArea: 'buttons' }}>\r\n        <Button onClick={() => handleDelete(todo.id)}>del</Button>{' '}\r\n        {/* <Button onClick={setActive}>\r\n          {todo.id === useSelector((state) => state.activeTodo).id ? 'O' : 'o'}{' '}\r\n        </Button>{' '} */}\r\n        <Button important={todo.important} onClick={handleImporantClick}>\r\n          {todo.important ? '!!!' : '!'}\r\n        </Button>\r\n      </div>\r\n    </Li>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\n\r\nimport Todo from './Todo';\r\nimport { initTodos, deleteTodo } from '../reducers/todosReducer';\r\nimport { resetActiveTodo, setActiveTodo } from '../reducers/activeTodoReducer';\r\n\r\nconst Ul = styled.ul`\r\n  border-top: 2px solid #78d5d7;\r\n\r\n  & > li:first-child {\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  .todo-enter {\r\n    opacity: 0;\r\n    transform: translate(0, -20px);\r\n  }\r\n\r\n  .todo-enter-active {\r\n    opacity: 1;\r\n    transform: translate(0, 0);\r\n    transition: all 200ms ease-out;\r\n  }\r\n\r\n  .todo-exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  .todo-exit-active {\r\n    opacity: 0;\r\n    transform: translate(-20px, 0px);\r\n    transition: all 150ms ease-out;\r\n  }\r\n`;\r\n\r\nconst TodoList = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(initTodos());\r\n  }, [dispatch]);\r\n\r\n  const selectedProject = useSelector((state) => state.selectedProject);\r\n  let todos = useSelector((state) => state.todos);\r\n\r\n  todos =\r\n    selectedProject === 0\r\n      ? todos\r\n      : todos.filter((todo) => todo.project === selectedProject);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteTodo(id));\r\n    dispatch(resetActiveTodo());\r\n  };\r\n\r\n  const activeTodo = useSelector((state) => state.activeTodo);\r\n  const isActive = (id) => {\r\n    return activeTodo.id === id;\r\n  };\r\n\r\n  return (\r\n    <TransitionGroup component={Ul}>\r\n      {todos.map((todo) => (\r\n        <CSSTransition key={todo.id} timeout={200} classNames=\"todo\">\r\n          <Todo\r\n            setActive={() => dispatch(setActiveTodo(todo))}\r\n            handleDelete={handleDelete}\r\n            todo={todo}\r\n            isActive={() => isActive(todo.id)}\r\n          >\r\n            {todo.title}\r\n          </Todo>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Notification from './Notification';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nconst H2 = styled.h2`\r\n  margin: 0.75rem 0 0 0;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  width: 100%;\r\n  padding: 0.5rem 1.5rem;\r\n  border-right: 1px solid #aaa;\r\n  border-left: 1px solid #aaa;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Todos = () => {\r\n  return (\r\n    <Div>\r\n      <H2>Todos</H2>\r\n      <Notification />\r\n      <TodoForm />\r\n      <TodoList />\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { updateTodo } from '../reducers/todosReducer';\r\n\r\nconst DivDescription = styled.div`\r\n  width: 60%;\r\n  padding: 0.5rem 1.5rem;\r\n\r\n  & > h2 {\r\n    margin: 0.75rem 0;\r\n  }\r\n\r\n  /* this is for \"click a todo to view it's details\" */\r\n  & > h3 {\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    margin-top: 50%;\r\n  }\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI',\r\n    Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n  font-size: 1rem;\r\n  padding: 0.4rem 0.6rem;\r\n  margin-bottom: 0.5rem;\r\n  width: 100%;\r\n  min-height: 200px;\r\n  max-height: 500px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dedede;\r\n  color: #333;\r\n  background-color: hsl(0, 0%, 98%);\r\n  box-shadow: 1px 2px 6px #ddd;\r\n\r\n  resize: vertical;\r\n  outline: none;\r\n`;\r\n\r\nconst RightSide = () => {\r\n  const dispatch = useDispatch();\r\n  const [description, setDescription] = useState('');\r\n\r\n  const activeTodo = useSelector((state) => state.activeTodo);\r\n  useEffect(() => {\r\n    setDescription(activeTodo.description);\r\n  }, [activeTodo]);\r\n\r\n  useEffect(() => {\r\n    const id = setTimeout(() => {\r\n      if (description) {\r\n        dispatch(updateTodo({ ...activeTodo, description }));\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(id);\r\n    };\r\n  }, [description, dispatch]);\r\n\r\n  const handleTextarea = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <DivDescription>\r\n      {activeTodo.title ? (\r\n        <>\r\n          <h2>\r\n            {activeTodo.title} {activeTodo.important ? '!!!' : '!'}\r\n          </h2>\r\n          <Textarea\r\n            value={description}\r\n            onChange={handleTextarea}\r\n            placeholder=\"Description...\"\r\n          ></Textarea>\r\n        </>\r\n      ) : (\r\n        <h3>Click a task to view it's details</h3>\r\n      )}\r\n    </DivDescription>\r\n  );\r\n};\r\n\r\nexport default RightSide;\r\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport LeftSide from './components/LeftSide';\nimport Todos from './components/Todos';\nimport RightSide from './components/RightSide';\n\nconst Div = styled.div`\n  height: 100vh;\n  background: #f7f9f9;\n  padding: 0;\n`;\n\nconst DivFlex = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nfunction App() {\n  return (\n    <Div>\n      <DivFlex>\n        <LeftSide />\n        <Todos />\n        <RightSide />\n      </DivFlex>\n    </Div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport todosReducer from './reducers/todosReducer';\r\nimport userReducer from './reducers/userReducer';\r\nimport notificationReducer from './reducers/notificationReducer';\r\nimport activeTodoReducer from './reducers/activeTodoReducer';\r\nimport projectsReducer from './reducers/projectsReducer';\r\nimport selectedProjectReducer from './reducers/selectedProjectReducer';\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    todos: todosReducer,\r\n    user: userReducer,\r\n    notification: notificationReducer,\r\n    activeTodo: activeTodoReducer,\r\n    projects: projectsReducer,\r\n    selectedProject: selectedProjectReducer,\r\n  }),\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}