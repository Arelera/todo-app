{"version":3,"sources":["services/projects.js","reducers/projectsReducer.js","components/InputText.js","components/ProjectForm.js","components/Button.js","components/Project.js","reducers/selectedProjectReducer.js","services/login.js","services/todos.js","reducers/userReducer.js","reducers/todosReducer.js","reducers/activeTodoReducer.js","components/LeftSide.js","components/Notification.js","components/TodoForm.js","components/Todo.js","components/TodoList.js","components/Todos.js","components/RightSide.js","reducers/notificationReducer.js","components/Button2.js","components/RegisterForm.js","components/LoginForm.js","components/LandingPage.js","App.js","store.js","index.js"],"names":["baseUrl","token","setToken","newToken","getAllMine","a","config","headers","Authorization","axios","get","response","data","createOne","title","post","deleteOne","id","delete","getProjects","dispatch","projectService","projects","type","reducer","state","action","project","filter","p","Input","styled","input","InputText","name","placeholder","ProjectForm","useDispatch","onSubmit","e","preventDefault","target","value","htmlFor","ButtonElement","button","props","fontSize","important","Button","onClick","children","Li","li","isActive","Project","handleSelect","handleDelete","user","then","res","console","log","foundToken","userJson","window","localStorage","getItem","JSON","parse","updateOne","todo","patch","loginUser","loginService","loggedUser","setItem","stringify","todoService","error","initialState","username","initTodos","todos","updateTodo","map","clearState","description","Div","div","H2","h2","Ul","ul","LeftSide","useEffect","useSelector","selectProject","deleteProject","selectedProject","history","useHistory","TransitionGroup","component","CSSTransition","classNames","timeout","key","push","removeItem","Notification","msg","notification","TodoForm","loggedUserJson","createTodo","completed","Todo","setActive","style","gridArea","onChange","checked","TodoList","deleteTodo","activeTodo","setActiveTodo","Todos","DivDescription","Textarea","textarea","RightSide","useState","setDescription","setTimeout","clearTimeout","giveNotification","Button2","RegisterForm","setRegistering","password","password2","createdUser","LoginForm","creating","handleLogin","Object","keys","length","Slogan","DivForm","LandingPage","registering","viewBox","xmlns","fill","d","to","DivFlex","App","path","store","createStore","combineReducers","todosReducer","userReducer","notificationReducer","activeTodoReducer","projectsReducer","selectedProjectReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8561afc.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:3001/api/projects';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst getAllMine = async () => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.get(baseUrl, config);\r\n  return response.data;\r\n};\r\n\r\nconst createOne = async (title) => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.post(baseUrl, { title }, config);\r\n  return response.data;\r\n};\r\n\r\nconst deleteOne = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  getAllMine,\r\n  createOne,\r\n  deleteOne,\r\n};\r\n","import projectService from '../services/projects';\r\n\r\n// actions\r\nexport const getProjects = () => {\r\n  return async (dispatch) => {\r\n    const projects = await projectService.getAllMine();\r\n    dispatch({\r\n      type: 'GET',\r\n      projects,\r\n    });\r\n  };\r\n};\r\n\r\nexport const addProject = (title) => {\r\n  return async (dispatch) => {\r\n    const project = await projectService.createOne(title);\r\n    dispatch({\r\n      type: 'ADD',\r\n      project,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteProject = (id) => {\r\n  return async (dispatch) => {\r\n    await projectService.deleteOne(id);\r\n    dispatch({\r\n      type: 'DELETE',\r\n      id,\r\n    });\r\n  };\r\n};\r\n\r\nexport const clearProjects = () => {\r\n  return {\r\n    type: 'CLEAR',\r\n  };\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'GET':\r\n      return action.projects;\r\n    case 'ADD':\r\n      return [...state, action.project];\r\n    case 'DELETE':\r\n      return state.filter((p) => p.id !== action.id);\r\n    case 'CLEAR':\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI',\r\n    Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n  padding: 0.4rem 0.6rem;\r\n  margin-bottom: 0.5rem;\r\n  width: 100%;\r\n  border: 1px solid #dedede;\r\n  border-radius: 4px;\r\n  color: #333;\r\n  background-color: hsl(0, 0%, 98%);\r\n  box-shadow: 1px 2px 6px #ddd;\r\n  outline: none;\r\n`;\r\n\r\nconst InputText = ({ type, id, name, placeholder }) => {\r\n  return <Input type={type} id={id} name={name} placeholder={placeholder} />;\r\n};\r\n\r\nexport default InputText;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addProject } from '../reducers/projectsReducer';\r\nimport InputText from './InputText';\r\n\r\nconst ProjectForm = () => {\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addProject(e.target.project.value));\r\n    e.target.project.value = '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"project\"></label>\r\n      <InputText\r\n        id=\"project\"\r\n        name=\"project\"\r\n        placeholder=\"Add project (enter)\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonElement = styled.button`\r\n  font-family: 'Roboto Condensed';\r\n  padding: 0.4rem 0.6rem;\r\n  box-shadow: 1px 2px 10px #ddd;\r\n  border-radius: 4px;\r\n  font-weight: 600;\r\n  font-size: ${(props) =>\r\n    props.fontSize ? `${props.fontSize}rem` : '0.88rem'};\r\n  background: hsl(0, 0%, 98%);\r\n\r\n  border: 1px solid ${(props) => (props.important ? '#FF007F' : '#dedede')};\r\n  color: ${(props) => (props.important ? '#FF007F' : '#222')};\r\n  text-shadow: ${(props) => (props.important ? '0px 0px 1px  #FF007F' : '')};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: hsl(0, 0%, 96%);\r\n  }\r\n`;\r\n\r\nconst Button = ({ type, onClick, children, important, fontSize }) => {\r\n  return (\r\n    <ButtonElement\r\n      fontSize={fontSize}\r\n      important={important}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </ButtonElement>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Li = styled.li`\r\n  width: 100%;\r\n  background: #fff;\r\n  padding: 0.2rem 0.5rem;\r\n  margin: 0.25rem 0;\r\n  border-radius: 6px;\r\n  box-shadow: 0px 1px 5px #ccc;\r\n  text-align: left;\r\n  border: 2px solid ${(props) => (props.isActive ? '#2081C3' : 'transparent')};\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  transition: border 200ms ease;\r\n  &:hover {\r\n    border: 2px solid #2081c3;\r\n  }\r\n`;\r\n\r\nconst Project = ({ id, children, handleSelect, handleDelete, isActive }) => {\r\n  return (\r\n    <Li isActive={isActive} onClick={handleSelect}>\r\n      <p>{children}</p>\r\n      {id !== 0 && <Button onClick={handleDelete}>del</Button>}\r\n    </Li>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","// action\r\nexport const selectProject = (id) => {\r\n  return {\r\n    type: 'SELECT',\r\n    id,\r\n  };\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case 'SELECT':\r\n      return action.id;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\n\r\n// it says login but it's also for creating users :)\r\n\r\nconst baseUrl = 'http://localhost:3001';\r\n\r\nconst loginUser = (user) => {\r\n  const response = axios.post(`${baseUrl}/api/login`, user);\r\n  return response.then((res) => res.data);\r\n};\r\n\r\nconst createUser = (user) => {\r\n  const response = axios.post(`${baseUrl}/api/users`, user);\r\n  return response.then((res) => {\r\n    console.log('RES:DATA: ', res.data);\r\n    return res.data;\r\n  });\r\n};\r\n\r\nexport default { loginUser, createUser };\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:3001/api/todos';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (foundToken) => {\r\n  token = `bearer ${foundToken}`;\r\n};\r\n\r\nconst userJson = window.localStorage.getItem('loggedTodoAppUser');\r\nif (userJson) {\r\n  setToken(JSON.parse(userJson).token);\r\n}\r\n\r\n// const getAll = () => {\r\n//   const response = axios.get(baseUrl);\r\n//   return response.then((res) => res.data);\r\n// };\r\n\r\nconst getAllMine = async () => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.get(baseUrl, config);\r\n  return response.data;\r\n};\r\n\r\nconst createOne = async ({ title, project }) => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.post(baseUrl, { title, project }, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteOne = (id) => {\r\n  const response = axios.delete(`${baseUrl}/${id}`, { id });\r\n  return response.then((res) => res.data);\r\n};\r\n\r\nconst updateOne = (todo) => {\r\n  const response = axios.patch(`${baseUrl}/${todo.id}`, todo);\r\n  return response.then((res) => res.data);\r\n};\r\n\r\nexport default {\r\n  // getAll,\r\n  getAllMine,\r\n  createOne,\r\n  deleteOne,\r\n  updateOne,\r\n  setToken,\r\n};\r\n","import loginService from '../services/login';\r\nimport todoService from '../services/todos';\r\n\r\n// action creators\r\n// login user, state will only hold \"name\" and \"username\"\r\nexport const loginUser = (user) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // loginService.loginUser may throw an error, so we in try/catch\r\n      const loggedUser = await loginService.loginUser(user);\r\n      window.localStorage.setItem(\r\n        'loggedTodoAppUser',\r\n        JSON.stringify(loggedUser)\r\n      );\r\n      todoService.setToken(loggedUser.token);\r\n      dispatch({\r\n        type: 'LOGIN',\r\n        user: loggedUser,\r\n      });\r\n      return {}; // for when we check lenght to see if there are errors\r\n    } catch (err) {\r\n      console.log('Error in userreducer: ', err);\r\n      return { error: 'Invalid credentials' };\r\n    }\r\n  };\r\n};\r\n// logout user\r\nexport const logoutUser = () => {\r\n  window.localStorage.removeItem('loggedTodoAppUser');\r\n  todoService.setToken(null);\r\n  return {\r\n    type: 'LOGOUT',\r\n  };\r\n};\r\n// verify user, this for checking if the user is in localstate\r\n// if it's an actual user in a database. will be run on refreshes and such\r\n// HAVEN'T USED YET, so i dont't think it's gonna be here for much longer...\r\nexport const verifyUser = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'VERIFY',\r\n      user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createUser = (user) => {\r\n  return async (dispatch) => {\r\n    const createdUser = await loginService.createUser(user);\r\n    console.log('WTF2, createdUser: ', createdUser);\r\n    dispatch({\r\n      type: 'CREATE',\r\n      user: { name: createdUser.name, username: createdUser.username },\r\n    });\r\n  };\r\n};\r\n\r\nexport const initUser = () => {\r\n  return async (dispatch) => {\r\n    const userJson = window.localStorage.getItem('loggedTodoAppUser');\r\n    if (userJson) {\r\n      const { name, username, token } = JSON.parse(userJson);\r\n      dispatch({\r\n        type: 'INIT',\r\n        user: { name, username },\r\n        token,\r\n      });\r\n      // if user is logged in or not, we return true/false for setLoggedIn in userForm\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n};\r\n\r\n//reducer\r\nconst initialState = { name: '', username: '' };\r\n// state not being null \"maaaaybee\" could break some stuff,\r\n// i forgot if it needed to be null\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return action.user;\r\n    case 'LOGOUT':\r\n      return initialState;\r\n    case 'INIT':\r\n      todoService.setToken(action.token);\r\n      return action.user;\r\n    case 'CREATE':\r\n      return state; // we need user to login for token\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import todoService from '../services/todos';\r\n\r\n// action creators\r\nexport const initTodos = () => {\r\n  return async (dispatch) => {\r\n    const todos = await todoService.getAllMine();\r\n    dispatch({\r\n      type: 'INIT_TODOS',\r\n      todos,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createTodo = ({ title, project }) => {\r\n  return async (dispatch) => {\r\n    const todo = await todoService.createOne({ title, project });\r\n    dispatch({\r\n      type: 'CREATE_TODO',\r\n      todo,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n  return async (dispatch) => {\r\n    todoService.deleteOne(id);\r\n    dispatch({\r\n      type: 'DELETE_TODO',\r\n      id,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateTodo = (todo) => {\r\n  return async (dispatch) => {\r\n    todoService.updateOne(todo);\r\n    dispatch({\r\n      type: 'UPDATE_TODO',\r\n      todo,\r\n    });\r\n  };\r\n};\r\n\r\nexport const cleanList = () => {\r\n  return {\r\n    type: 'CLEAN_LIST',\r\n  };\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_TODO':\r\n      return [...state, action.todo];\r\n    case 'DELETE_TODO':\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case 'UPDATE_TODO':\r\n      return state.map((todo) =>\r\n        todo.id !== action.todo.id ? todo : action.todo\r\n      );\r\n    case 'CLEAN_LIST':\r\n      return [];\r\n    case 'INIT_TODOS':\r\n      return action.todos;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","// actions\r\nexport const setActiveTodo = (todo) => {\r\n  return {\r\n    type: 'SET',\r\n    todo,\r\n  };\r\n};\r\n\r\nexport const resetActiveTodo = () => {\r\n  return {\r\n    type: 'RESET',\r\n  };\r\n};\r\n\r\n// reducer\r\nconst clearState = { title: '', important: '', description: '', id: 0 };\r\nconst reducer = (state = clearState, action) => {\r\n  switch (action.type) {\r\n    case 'SET':\r\n      return action.todo;\r\n    case 'RESET':\r\n      return clearState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport ProjectForm from './ProjectForm';\r\nimport Project from './Project';\r\nimport {\r\n  clearProjects,\r\n  deleteProject,\r\n  getProjects,\r\n} from '../reducers/projectsReducer';\r\nimport projectService from '../services/projects';\r\nimport { selectProject } from '../reducers/selectedProjectReducer';\r\nimport Button from './Button';\r\nimport { logoutUser } from '../reducers/userReducer';\r\nimport { cleanList } from '../reducers/todosReducer';\r\nimport { resetActiveTodo } from '../reducers/activeTodoReducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Div = styled.div`\r\n  padding: 0.5rem;\r\n  min-width: 180px;\r\n  overflow-y: scroll;\r\n\r\n  position: relative;\r\n  & > button {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 10px;\r\n  }\r\n`;\r\n\r\nconst H2 = styled.h2`\r\n  margin: 0.75rem 0 0 0;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  border-top: 2px solid #78d5d7;\r\n\r\n  & > li:first-child {\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  .fade-enter {\r\n    opacity: 0;\r\n    transform: translate(0, -20px);\r\n  }\r\n\r\n  .fade-enter-active {\r\n    opacity: 1;\r\n    transform: translate(0, 0);\r\n    transition: all 200ms ease-out;\r\n  }\r\n\r\n  .fade-exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  .fade-exit-active {\r\n    opacity: 0;\r\n    transform: translate(-20px, 0px);\r\n    transition: all 150ms ease-out;\r\n  }\r\n`;\r\n\r\nconst LeftSide = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const userJson = window.localStorage.getItem('loggedTodoAppUser');\r\n    if (userJson) {\r\n      const token = JSON.parse(userJson).token;\r\n      projectService.setToken(token);\r\n\r\n      dispatch(getProjects());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const projects = useSelector((state) => state.projects);\r\n\r\n  const handleSelect = (id) => {\r\n    dispatch(selectProject(id));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteProject(id));\r\n  };\r\n\r\n  const selectedProject = useSelector((state) => state.selectedProject);\r\n  const isActive = (id) => selectedProject === id;\r\n\r\n  const history = useHistory(); // *******\r\n\r\n  const handleLogout = () => {\r\n    history.push('/'); // idk about this, doesn't help\r\n    dispatch(logoutUser());\r\n    dispatch(cleanList());\r\n    dispatch(resetActiveTodo());\r\n    dispatch(clearProjects());\r\n  };\r\n\r\n  return (\r\n    <Div>\r\n      <H2>Projects</H2>\r\n      <ProjectForm />\r\n      <TransitionGroup component={Ul}>\r\n        <Project id={0} handleSelect={() => handleSelect(0)}>\r\n          All\r\n        </Project>\r\n\r\n        {projects.map((p) => (\r\n          <CSSTransition classNames=\"fade\" timeout={150}>\r\n            <Project\r\n              handleSelect={() => handleSelect(p.id)}\r\n              handleDelete={() => handleDelete(p.id)}\r\n              key={p.id}\r\n              isActive={isActive(p.id)} // this kinda makes no sense but it works if its not a callback\r\n            >\r\n              {p.title}\r\n            </Project>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n      <Button onClick={handleLogout}>logout</Button>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default LeftSide;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Notification = ({ type }) => {\r\n  const msg = useSelector((state) => state.notification);\r\n  return (\r\n    <div>\r\n      <h3>{msg}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createTodo } from '../reducers/todosReducer';\r\nimport todoService from '../services/todos';\r\nimport InputText from './InputText';\r\n\r\nconst TodoForm = () => {\r\n  const dispatch = useDispatch();\r\n  const selectedProject = useSelector((state) => state.selectedProject);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const loggedUserJson = window.localStorage.getItem('loggedTodoAppUser');\r\n\r\n    if (loggedUserJson) {\r\n      const loggedUser = JSON.parse(loggedUserJson);\r\n      todoService.setToken(loggedUser.token);\r\n      dispatch(\r\n        createTodo({ title: e.target.title.value, project: selectedProject })\r\n      );\r\n      e.target.title.value = '';\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputText\r\n          name=\"title\"\r\n          placeholder='Add a todo item, press \"Enter\" to save'\r\n        />\r\n        {/* <Button type=\"submit\">add</Button> */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { updateTodo } from '../reducers/todosReducer';\r\nimport Button from './Button';\r\n\r\nconst Li = styled.li`\r\n  padding: 0.2rem 0 0.2rem 0.5rem;\r\n  margin: 0.25rem 0;\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  border: 2px solid ${(props) => (props.isActive() ? '#63d2ff' : 'transparent')};\r\n  font-family: 'Open Sans';\r\n\r\n  display: grid;\r\n  grid-row-gap: 0.1rem;\r\n  grid-template-columns: repeat(5, 1fr) minmax(60px, 80px);\r\n  grid-template-areas: 'text text text text text buttons';\r\n\r\n  box-shadow: 0px 1px 5px #ccc;\r\n\r\n  transition: border ease 200ms;\r\n  &:hover {\r\n    border: 2px solid #63d2ff;\r\n  }\r\n\r\n  & > p {\r\n    display: flex;\r\n    align-items: center;\r\n    & > input {\r\n      margin-right: 0.5rem;\r\n    }\r\n    color: ${(props) => (props.completed ? '#aaa' : '#222')};\r\n    font-style: ${(props) => (props.completed ? 'italic' : '')};\r\n    text-decoration: ${(props) => (props.completed ? 'line-through' : '')};\r\n  }\r\n`;\r\nconst Todo = ({ todo, handleDelete, setActive, isActive }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCheck = () => {\r\n    dispatch(updateTodo({ ...todo, completed: !todo.completed }));\r\n  };\r\n\r\n  const handleImporantClick = () => {\r\n    dispatch(updateTodo({ ...todo, important: !todo.important }));\r\n  };\r\n\r\n  return (\r\n    <Li isActive={isActive} completed={todo.completed} onClick={setActive}>\r\n      <p style={{ gridArea: 'text' }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={handleCheck}\r\n          checked={todo.completed ? true : false}\r\n        />\r\n        {todo.title}\r\n      </p>{' '}\r\n      <div style={{ gridArea: 'buttons' }}>\r\n        <Button onClick={() => handleDelete(todo.id)}>del</Button>{' '}\r\n        {/* <Button onClick={setActive}>\r\n          {todo.id === useSelector((state) => state.activeTodo).id ? 'O' : 'o'}{' '}\r\n        </Button>{' '} */}\r\n        <Button important={todo.important} onClick={handleImporantClick}>\r\n          {todo.important ? '!!!' : '!'}\r\n        </Button>\r\n      </div>\r\n    </Li>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\n\r\nimport Todo from './Todo';\r\nimport { initTodos, deleteTodo } from '../reducers/todosReducer';\r\nimport { resetActiveTodo, setActiveTodo } from '../reducers/activeTodoReducer';\r\n\r\nconst Ul = styled.ul`\r\n  border-top: 2px solid #78d5d7;\r\n\r\n  & > li:first-child {\r\n    margin-top: 0.5rem;\r\n  }\r\n\r\n  .todo-enter {\r\n    opacity: 0;\r\n    transform: translate(0, -20px);\r\n  }\r\n\r\n  .todo-enter-active {\r\n    opacity: 1;\r\n    transform: translate(0, 0);\r\n    transition: all 200ms ease-out;\r\n  }\r\n\r\n  .todo-exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  .todo-exit-active {\r\n    opacity: 0;\r\n    transform: translate(-20px, 0px);\r\n    transition: all 150ms ease-out;\r\n  }\r\n`;\r\n\r\nconst TodoList = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(initTodos());\r\n  }, [dispatch]);\r\n\r\n  const selectedProject = useSelector((state) => state.selectedProject);\r\n  let todos = useSelector((state) => state.todos);\r\n\r\n  todos =\r\n    selectedProject === 0\r\n      ? todos\r\n      : todos.filter((todo) => todo.project === selectedProject);\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteTodo(id));\r\n    dispatch(resetActiveTodo());\r\n  };\r\n\r\n  const activeTodo = useSelector((state) => state.activeTodo);\r\n  const isActive = (id) => {\r\n    return activeTodo.id === id;\r\n  };\r\n\r\n  return (\r\n    <TransitionGroup component={Ul}>\r\n      {todos.map((todo) => (\r\n        <CSSTransition key={todo.id} timeout={200} classNames=\"todo\">\r\n          <Todo\r\n            setActive={() => dispatch(setActiveTodo(todo))}\r\n            handleDelete={handleDelete}\r\n            todo={todo}\r\n            isActive={() => isActive(todo.id)}\r\n          >\r\n            {todo.title}\r\n          </Todo>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Notification from './Notification';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nconst H2 = styled.h2`\r\n  margin: 0.75rem 0 0 0;\r\n`;\r\n\r\nconst Div = styled.div`\r\n  width: 100%;\r\n  padding: 0.5rem 1.5rem;\r\n  border-right: 1px solid #aaa;\r\n  border-left: 1px solid #aaa;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Todos = () => {\r\n  return (\r\n    <Div>\r\n      <H2>Todos</H2>\r\n      <Notification />\r\n      <TodoForm />\r\n      <TodoList />\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { updateTodo } from '../reducers/todosReducer';\r\n\r\nconst DivDescription = styled.div`\r\n  width: 60%;\r\n  padding: 0.5rem 1.5rem;\r\n\r\n  & > h2 {\r\n    margin: 0.75rem 0;\r\n  }\r\n\r\n  /* this is for \"click a todo to view it's details\" */\r\n  & > h3 {\r\n    font-size: 1.5rem;\r\n    text-align: center;\r\n    margin-top: 50%;\r\n  }\r\n`;\r\n\r\nconst Textarea = styled.textarea`\r\n  font-family: 'Open Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI',\r\n    Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n  font-size: 1rem;\r\n  padding: 0.4rem 0.6rem;\r\n  margin-bottom: 0.5rem;\r\n  width: 100%;\r\n  min-height: 200px;\r\n  max-height: 500px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dedede;\r\n  color: #333;\r\n  background-color: hsl(0, 0%, 98%);\r\n  box-shadow: 1px 2px 6px #ddd;\r\n\r\n  resize: vertical;\r\n  outline: none;\r\n`;\r\n\r\nconst RightSide = () => {\r\n  const dispatch = useDispatch();\r\n  const [description, setDescription] = useState('');\r\n\r\n  const activeTodo = useSelector((state) => state.activeTodo);\r\n  useEffect(() => {\r\n    setDescription(activeTodo.description);\r\n  }, [activeTodo]);\r\n\r\n  useEffect(() => {\r\n    const id = setTimeout(() => {\r\n      if (description) {\r\n        dispatch(updateTodo({ ...activeTodo, description }));\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(id);\r\n    };\r\n  }, [description, dispatch, activeTodo]);\r\n\r\n  const handleTextarea = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <DivDescription>\r\n      {activeTodo.title ? (\r\n        <>\r\n          <h2>\r\n            {activeTodo.title} {activeTodo.important ? '!!!' : '!'}\r\n          </h2>\r\n          <Textarea\r\n            value={description}\r\n            onChange={handleTextarea}\r\n            placeholder=\"Description...\"\r\n          ></Textarea>\r\n        </>\r\n      ) : (\r\n        <h3>Click a task to view it's details</h3>\r\n      )}\r\n    </DivDescription>\r\n  );\r\n};\r\n\r\nexport default RightSide;\r\n","// action creators\r\nexport const giveNotification = (msg) => {\r\n  return async (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch({ type: 'RESET' });\r\n    }, 5000);\r\n    dispatch({\r\n      type: 'GIVE',\r\n      msg,\r\n    });\r\n  };\r\n};\r\n\r\n//reducer\r\nconst reducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'GIVE':\r\n      return action.msg;\r\n    case 'RESET':\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonElement = styled.button`\r\n  font-family: 'Roboto Condensed';\r\n  padding: 0.4rem 0.6rem;\r\n  /* box-shadow: 1px 2px 10px #ddd;\r\n  border-radius: 4px; */\r\n  background: hsla(0, 0%, 98%, 0);\r\n  font-weight: 400;\r\n  font-size: ${(props) =>\r\n    props.fontSize ? `${props.fontSize}rem` : '0.88rem'};\r\n  border: none;\r\n\r\n  color: ${(props) => (props.important ? '#FF007F' : '#555')};\r\n  text-shadow: ${(props) => (props.important ? '0px 0px 1px  #FF007F' : '')};\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: #2081c3;\r\n  }\r\n`;\r\n\r\nconst Button2 = ({ type, onClick, children, important, fontSize }) => {\r\n  return (\r\n    <ButtonElement\r\n      fontSize={fontSize}\r\n      important={important}\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </ButtonElement>\r\n  );\r\n};\r\n\r\nexport default Button2;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { giveNotification } from '../reducers/notificationReducer';\r\nimport { createUser } from '../reducers/userReducer';\r\nimport Button from './Button';\r\nimport Button2 from './Button2';\r\nimport InputText from './InputText';\r\n\r\nconst RegisterForm = ({ setRegistering }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.name.value;\r\n    const username = e.target.username.value;\r\n    const password = e.target.password.value;\r\n    const password2 = e.target.password2.value;\r\n\r\n    if (password !== password2) {\r\n      return dispatch(giveNotification(\"Passwords don't match!\"));\r\n    }\r\n\r\n    dispatch(createUser({ name, username, password }));\r\n    dispatch(giveNotification(`User \"${username}\" created!`));\r\n\r\n    // setRegistering(false);\r\n\r\n    e.target.name.value = '';\r\n    e.target.username.value = '';\r\n    e.target.password.value = '';\r\n    e.target.password2.value = '';\r\n    setRegistering(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleCreate}>\r\n      <label htmlFor=\"name\">Name</label>\r\n      <InputText type=\"text\" id=\"name\" name=\"name\" />\r\n      <br />\r\n      <label htmlFor=\"username\">Username</label>\r\n      <InputText type=\"text\" id=\"username\" name=\"username\" />\r\n      <br />\r\n      <label htmlFor=\"password\">Password</label>\r\n      <InputText type=\"password\" id=\"password\" name=\"password\" />\r\n      <br />\r\n      <label htmlFor=\"password2\">Repeat password</label>\r\n      <InputText type=\"password\" id=\"password2\" name=\"password2\" />\r\n      <br />\r\n      <Button type=\"submit\">create</Button>{' '}\r\n      <Button2 type=\"button\" onClick={() => setRegistering(false)}>\r\n        Already have an account? Click here to log-in\r\n      </Button2>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { giveNotification } from '../reducers/notificationReducer';\r\nimport { getProjects } from '../reducers/projectsReducer';\r\n\r\nimport { initTodos } from '../reducers/todosReducer';\r\nimport { loginUser } from '../reducers/userReducer';\r\nimport projectService from '../services/projects';\r\nimport Button from './Button';\r\nimport Button2 from './Button2';\r\nimport InputText from './InputText';\r\n\r\nconst LoginForm = ({ creating, setRegistering }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const username = e.target.username.value;\r\n    const password = e.target.password.value;\r\n\r\n    const result = dispatch(loginUser({ username, password }));\r\n\r\n    result.then((res) => {\r\n      // if length is 0, no error was sent\r\n      if (Object.keys(res).length === 0) {\r\n        dispatch(initTodos());\r\n\r\n        const token = JSON.parse(\r\n          window.localStorage.getItem('loggedTodoAppUser')\r\n        ).token;\r\n        projectService.setToken(token);\r\n        dispatch(getProjects());\r\n\r\n        return dispatch(giveNotification(`${username} logged in`));\r\n      }\r\n      dispatch(giveNotification(res.error));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <label htmlFor=\"username\">Username</label>\r\n      <InputText type=\"text\" id=\"username\" name=\"username\" />\r\n      <br />\r\n      <label htmlFor=\"password\">Password</label>\r\n      <InputText type=\"password\" id=\"password\" name=\"password\" />\r\n      <br />\r\n      <Button type=\"submit\">login</Button>{' '}\r\n      <Button2 type=\"button\" onClick={() => setRegistering(true)}>\r\n        cancel\r\n      </Button2>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport RegisterForm from './RegisterForm';\r\nimport LoginForm from './LoginForm';\r\n\r\n// overall styling of this page is pretty bad ngl, i tried\r\nconst Div = styled.div`\r\n  height: 100vh;\r\n  padding: 2rem 2rem 2rem 1rem;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  background: #f7f9f9;\r\n`;\r\n\r\nconst Slogan = styled.div`\r\n  display: inline-block;\r\n  /* padding: 10rem 0 10rem 0; */\r\n  padding-top: 10%;\r\n  h1 {\r\n    font-size: 5rem;\r\n    position: relative; /** for z index */\r\n    z-index: 100;\r\n  }\r\n  h2 {\r\n    font-size: 3.5rem;\r\n    position: relative;\r\n    z-index: 100;\r\n    color: #333;\r\n    font-weight: 500;\r\n  }\r\n\r\n  position: relative;\r\n  svg {\r\n    max-height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nconst DivForm = styled.div`\r\n  width: 550px;\r\n  margin: 1rem 3rem 1rem 0;\r\n\r\n  padding: 1rem 1.2rem 2rem 1.2rem;\r\n  background: #bed8d4;\r\n  border-radius: 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  input,\r\n  button {\r\n    box-shadow: none;\r\n  }\r\n  h3 {\r\n    color: #333;\r\n    text-align: center;\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst LandingPage = () => {\r\n  const [registering, setRegistering] = useState(true);\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  return (\r\n    <Div>\r\n      <Slogan>\r\n        <h1>Take the Todos You've Always Dreamed Of</h1>\r\n        <svg viewBox=\"0 40 180 180\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n            fill=\"#78D5D7\"\r\n            d=\"M139 57c11 6 19 19 18 30-1 12-11 23-19 33-8 11-14 21-25 31-11 11-27 22-42 20-14-2-26-17-27-32-1-16 8-31 12-45 5-15 4-28 11-35 6-6 20-5 33-5 14 0 28-2 39 3z\"\r\n          />\r\n        </svg>\r\n        <h2>Maybe Even Become the Todo</h2>\r\n      </Slogan>\r\n      <DivForm>\r\n        <h3>Create your Todo account</h3>\r\n        {user.name === '' ? (\r\n          registering ? (\r\n            <RegisterForm setRegistering={setRegistering} />\r\n          ) : (\r\n            <LoginForm setRegistering={setRegistering} />\r\n          )\r\n        ) : (\r\n          <Redirect to=\"/app\" />\r\n        )}\r\n      </DivForm>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\nimport LeftSide from './components/LeftSide';\nimport Todos from './components/Todos';\nimport RightSide from './components/RightSide';\nimport LandingPage from './components/LandingPage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initUser } from './reducers/userReducer';\n\nconst Div = styled.div`\n  height: 100vh;\n  background: #f7f9f9;\n  padding: 0;\n`;\n\nconst DivFlex = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(initUser());\n  }, [dispatch]);\n\n  const user = useSelector((state) => state.user);\n\n  // user not logged in, but trying to go to app? send em over to the landing page!\n  return (\n    <Router>\n      <Div>\n        <Switch>\n          <Route path=\"/app\">\n            {!user.username ? (\n              <Redirect to=\"/\" />\n            ) : (\n              <DivFlex>\n                <LeftSide />\n                <Todos />\n                <RightSide />\n              </DivFlex>\n            )}\n          </Route>\n          <Route path=\"/\">\n            <LandingPage />\n          </Route>\n        </Switch>\n      </Div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport todosReducer from './reducers/todosReducer';\r\nimport userReducer from './reducers/userReducer';\r\nimport notificationReducer from './reducers/notificationReducer';\r\nimport activeTodoReducer from './reducers/activeTodoReducer';\r\nimport projectsReducer from './reducers/projectsReducer';\r\nimport selectedProjectReducer from './reducers/selectedProjectReducer';\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    todos: todosReducer,\r\n    user: userReducer,\r\n    notification: notificationReducer,\r\n    activeTodo: activeTodoReducer,\r\n    projects: projectsReducer,\r\n    selectedProject: selectedProjectReducer,\r\n  }),\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}