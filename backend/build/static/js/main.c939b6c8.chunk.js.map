{"version":3,"sources":["components/Notification.js","services/todos.js","reducers/todosReducer.js","components/Button.js","components/InputText.js","components/TodoForm.js","components/Todo.js","components/TodoList.js","reducers/notificationReducer.js","services/login.js","reducers/userReducer.js","components/UserForm.js","App.js","store.js","index.js"],"names":["Notification","type","msg","useSelector","state","notification","token","setToken","foundToken","userJson","window","localStorage","getItem","JSON","parse","getAllMine","a","config","headers","Authorization","axios","get","response","data","createOne","title","post","deleteOne","id","delete","then","res","updateOne","todo","patch","initTodos","dispatch","todoService","todos","updateTodo","reducer","action","filter","map","ButtonElement","styled","button","props","important","Button","onClick","children","Input","input","InputText","name","TodoForm","useDispatch","onSubmit","e","preventDefault","loggedUserJson","loggedUser","target","value","console","log","Li","li","completed","Todo","style","gridArea","onChange","checked","TodoList","useEffect","key","giveNotification","setTimeout","user","loginUser","loginService","setItem","stringify","error","initialState","username","UserForm","useState","expanded","setExpanded","loggedIn","setLoggedIn","creating","setCreating","handleLogin","password","Object","keys","length","removeItem","password2","createdUser","htmlFor","Div","div","H2","h2","DivInner","App","store","createStore","combineReducers","todosReducer","userReducer","notificationReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c939b6c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Notification = ({ type }) => {\r\n  const msg = useSelector((state) => state.notification);\r\n  return (\r\n    <div>\r\n      <h3>{msg}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/todos';\r\n\r\nlet token = null;\r\n\r\nconst setToken = (foundToken) => {\r\n  token = `bearer ${foundToken}`;\r\n};\r\n\r\nconst userJson = window.localStorage.getItem('loggedTodoAppUser');\r\nif (userJson) {\r\n  setToken(JSON.parse(userJson).token);\r\n}\r\n\r\n// const getAll = () => {\r\n//   const response = axios.get(baseUrl);\r\n//   return response.then((res) => res.data);\r\n// };\r\n\r\nconst getAllMine = async () => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.get(baseUrl, config);\r\n  return response.data;\r\n};\r\n\r\nconst createOne = async (title) => {\r\n  const config = { headers: { Authorization: token } };\r\n  const response = await axios.post(baseUrl, { title }, config);\r\n\r\n  return response.data;\r\n};\r\n\r\nconst deleteOne = (id) => {\r\n  const response = axios.delete(`${baseUrl}/${id}`, { id });\r\n  return response.then((res) => res.data);\r\n};\r\n\r\nconst updateOne = (todo) => {\r\n  const response = axios.patch(`${baseUrl}/${todo.id}`, todo);\r\n  return response.then((res) => res.data);\r\n};\r\n\r\nexport default {\r\n  // getAll,\r\n  getAllMine,\r\n  createOne,\r\n  deleteOne,\r\n  updateOne,\r\n  setToken,\r\n};\r\n","import todoService from '../services/todos';\r\n\r\n// action creators\r\nexport const initTodos = () => {\r\n  return async (dispatch) => {\r\n    const todos = await todoService.getAllMine();\r\n    dispatch({\r\n      type: 'INIT_TODOS',\r\n      todos,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createTodo = (title) => {\r\n  return async (dispatch) => {\r\n    const todo = await todoService.createOne(title);\r\n    console.log('we here?');\r\n    dispatch({\r\n      type: 'CREATE_TODO',\r\n      todo,\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (id) => {\r\n  return async (dispatch) => {\r\n    todoService.deleteOne(id);\r\n    dispatch({\r\n      type: 'DELETE_TODO',\r\n      id,\r\n    });\r\n  };\r\n};\r\n\r\nexport const updateTodo = (todo) => {\r\n  return async (dispatch) => {\r\n    todoService.updateOne(todo);\r\n    dispatch({\r\n      type: 'UPDATE_TODO',\r\n      todo,\r\n    });\r\n  };\r\n};\r\n\r\nexport const cleanList = () => {\r\n  return {\r\n    type: 'CLEAN_LIST',\r\n  };\r\n};\r\n\r\n// reducer\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'CREATE_TODO':\r\n      return [...state, action.todo];\r\n    case 'DELETE_TODO':\r\n      return state.filter((todo) => todo.id !== action.id);\r\n    case 'UPDATE_TODO':\r\n      return state.map((todo) =>\r\n        todo.id !== action.todo.id ? todo : action.todo\r\n      );\r\n    case 'CLEAN_LIST':\r\n      return [];\r\n    case 'INIT_TODOS':\r\n      return action.todos;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ButtonElement = styled.button`\r\n  padding: 0.4rem 0.6rem;\r\n  box-shadow: 1px 2px 10px #ddd;\r\n  border-radius: 4px;\r\n  font-weight: 600;\r\n  background: hsl(0, 0%, 90%);\r\n\r\n  border: 1px solid ${(props) => (props.important ? '#FF007F' : '#dedede')};\r\n  color: ${(props) => (props.important ? '#FF007F' : '#222')};\r\n  text-shadow: ${(props) => (props.important ? '0px 0px 1px  #FF007F' : '')};\r\n`;\r\n\r\nconst Button = ({ type, onClick, children, important }) => {\r\n  return (\r\n    <ButtonElement important={important} type={type} onClick={onClick}>\r\n      {children}\r\n    </ButtonElement>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  border: 1px solid #dedede;\r\n  padding: 0.4rem 0.6rem;\r\n  border-radius: 4px;\r\n  color: #333;\r\n  background-color: hsl(0, 0%, 94%);\r\n  box-shadow: 1px 2px 6px #ddd;\r\n  outline: none;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst InputText = ({ type, id, name }) => {\r\n  return <Input type={type} id={id} name={name} />;\r\n};\r\n\r\nexport default InputText;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createTodo } from '../reducers/todosReducer';\r\nimport todoService from '../services/todos';\r\nimport Button from './Button';\r\nimport InputText from './InputText';\r\n\r\nconst TodoForm = () => {\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const loggedUserJson = window.localStorage.getItem('loggedTodoAppUser');\r\n\r\n    if (loggedUserJson) {\r\n      const loggedUser = JSON.parse(loggedUserJson);\r\n      todoService.setToken(loggedUser.token);\r\n      dispatch(createTodo(e.target.title.value));\r\n      e.target.title.value = '';\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Add Item</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <InputText name=\"title\" /> <Button type=\"submit\">add</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { deleteTodo, updateTodo } from '../reducers/todosReducer';\r\nimport Button from './Button';\r\n\r\nconst Li = styled.li`\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 0.5rem 0;\r\n  /* this is the one grid thing i can use easily lol, other things are hard */\r\n  display: grid;\r\n  grid-row-gap: 0.1rem;\r\n  grid-template-columns: repeat(5, 1fr) 80px;\r\n  grid-template-areas: 'text text text text text buttons';\r\n\r\n  p {\r\n    color: ${(props) => (props.completed ? '#aaa' : '#222')};\r\n    font-style: ${(props) => (props.completed ? 'italic' : '')};\r\n    text-decoration: ${(props) => (props.completed ? 'line-through' : '')};\r\n  }\r\n\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\nconst Todo = ({ todo }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCheck = () => {\r\n    dispatch(updateTodo({ ...todo, completed: !todo.completed }));\r\n  };\r\n\r\n  const handleDelClick = () => {\r\n    dispatch(deleteTodo(todo.id));\r\n  };\r\n\r\n  const handleImporantClick = () => {\r\n    dispatch(updateTodo({ ...todo, important: !todo.important }));\r\n  };\r\n\r\n  return (\r\n    <Li completed={todo.completed}>\r\n      <p style={{ gridArea: 'text' }}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={handleCheck}\r\n          checked={todo.completed ? true : false}\r\n        />\r\n        {todo.title}\r\n      </p>{' '}\r\n      <div style={{ gridArea: 'buttons' }}>\r\n        <Button onClick={handleDelClick}>del</Button>{' '}\r\n        <Button important={todo.important} onClick={handleImporantClick}>\r\n          {todo.important ? '!!!' : '!'}\r\n        </Button>\r\n      </div>\r\n    </Li>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initTodos } from '../reducers/todosReducer';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(initTodos());\r\n  }, [dispatch]);\r\n\r\n  let todos = useSelector((state) => state.todos);\r\n\r\n  return (\r\n    <>\r\n      <h2>List</h2>\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <Todo key={todo.id} todo={todo}>\r\n            {todo.title}\r\n          </Todo>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nexport default TodoList;\r\n","// action creators\r\nexport const giveNotification = (msg) => {\r\n  return async (dispatch) => {\r\n    setTimeout(() => {\r\n      dispatch({ type: 'RESET' });\r\n    }, 5000);\r\n    dispatch({\r\n      type: 'GIVE',\r\n      msg,\r\n    });\r\n  };\r\n};\r\n\r\n//reducer\r\nconst reducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'GIVE':\r\n      return action.msg;\r\n    case 'RESET':\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\n\r\n// it says login but it's also for creating users :)\r\n\r\nconst baseUrl = '';\r\n\r\nconst loginUser = (user) => {\r\n  const response = axios.post(`${baseUrl}/api/login`, user);\r\n  return response.then((res) => res.data);\r\n};\r\n\r\nconst createUser = (user) => {\r\n  const response = axios.post(`${baseUrl}/api/users`, user);\r\n  return response.then((res) => {\r\n    console.log('RES:DATA: ', res.data);\r\n    return res.data;\r\n  });\r\n};\r\n\r\nexport default { loginUser, createUser };\r\n","import loginService from '../services/login';\r\nimport todoService from '../services/todos';\r\n\r\n// action creators\r\n// login user, state will only hold \"name\" and \"username\"\r\nexport const loginUser = (user) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // loginService.loginUser may throw an error, so we in try/catch\r\n      const loggedUser = await loginService.loginUser(user);\r\n      window.localStorage.setItem(\r\n        'loggedTodoAppUser',\r\n        JSON.stringify(loggedUser)\r\n      );\r\n      todoService.setToken(loggedUser.token);\r\n      dispatch({\r\n        type: 'LOGIN',\r\n        user: loggedUser,\r\n      });\r\n      return {}; // for when we check lenght to see if there are errors\r\n    } catch (err) {\r\n      console.log('Error in userreducer: ', err);\r\n      return { error: 'Invalid credentials' };\r\n    }\r\n  };\r\n};\r\n// logout user\r\nexport const logoutUser = () => {\r\n  window.localStorage.removeItem('loggedTodoAppUser');\r\n  todoService.setToken(null);\r\n  return {\r\n    type: 'LOGOUT',\r\n  };\r\n};\r\n// verify user, this for checking if the user is in localstate\r\n// if it's an actual user in a database. will be run on refreshes and such\r\n// HAVEN'T USED YET, so i dont't think it's gonna be here for much longer...\r\nexport const verifyUser = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'VERIFY',\r\n      user,\r\n    });\r\n  };\r\n};\r\n\r\nexport const createUser = (user) => {\r\n  return async (dispatch) => {\r\n    const createdUser = await loginService.createUser(user);\r\n    console.log('WTF2, createdUser: ', createdUser);\r\n    dispatch({\r\n      type: 'CREATE',\r\n      user: { name: createdUser.name, username: createdUser.username },\r\n    });\r\n  };\r\n};\r\n\r\n//reducer\r\nconst initialState = { name: '', username: '' };\r\nconst reducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return action.user;\r\n    case 'LOGOUT':\r\n      return initialState;\r\n    case 'CREATE':\r\n      return state; // we need user to login for token\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from './Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport { giveNotification } from '../reducers/notificationReducer';\r\nimport { cleanList, initTodos } from '../reducers/todosReducer';\r\nimport { createUser, loginUser, logoutUser } from '../reducers/userReducer';\r\nimport InputText from './InputText';\r\n\r\n// currently accounts can be only created through requests\r\nconst UserForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState();\r\n  const [creating, setCreating] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loggedUserJson = window.localStorage.getItem('loggedTodoAppUser');\r\n    if (loggedUserJson) {\r\n      const { name, username } = JSON.parse(loggedUserJson);\r\n      dispatch(loginUser({ name, username }));\r\n      setLoggedIn(true);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const username = e.target.username.value;\r\n    const password = e.target.password.value;\r\n\r\n    const result = dispatch(loginUser({ username, password }));\r\n    // this block down here took me a long ass time to get right\r\n    result.then((res) => {\r\n      // if length is 0, no error was sent\r\n      if (Object.keys(res).length === 0) {\r\n        dispatch(initTodos());\r\n        setExpanded(false);\r\n        setLoggedIn(true);\r\n        return dispatch(giveNotification(`${username} logged in`));\r\n      }\r\n      dispatch(giveNotification(res.error));\r\n    });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n    dispatch(cleanList());\r\n\r\n    setLoggedIn(false);\r\n  };\r\n\r\n  const handleCreate = (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.name.value;\r\n    const username = e.target.username.value;\r\n    const password = e.target.password.value;\r\n    const password2 = e.target.password2.value;\r\n    if (password !== password2) {\r\n      return dispatch(giveNotification(\"Passwords don't match!\"));\r\n    }\r\n    dispatch(createUser({ name, username, password }));\r\n    dispatch(giveNotification(`User \"${username}\" created!`));\r\n    setCreating(false);\r\n    e.target.name.value = '';\r\n    e.target.username.value = '';\r\n    e.target.password.value = '';\r\n    e.target.password2.value = '';\r\n  };\r\n\r\n  if (loggedIn) {\r\n    return <Button onClick={handleLogout}>logout</Button>;\r\n  } else {\r\n    return expanded ? (\r\n      creating ? (\r\n        // create user form\r\n        <form onSubmit={handleCreate}>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <InputText type=\"text\" id=\"name\" name=\"name\" />\r\n          <br />\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <InputText type=\"text\" id=\"username\" name=\"username\" />\r\n          <br />\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <InputText type=\"password\" id=\"password\" name=\"password\" />\r\n          <br />\r\n          <label htmlFor=\"password2\">Repeat password:</label>\r\n          <InputText type=\"password\" id=\"password2\" name=\"password2\" />\r\n          <br />\r\n          <Button type=\"submit\">create</Button>{' '}\r\n          <Button type=\"button\" onClick={() => setCreating(false)}>\r\n            cancel\r\n          </Button>\r\n        </form>\r\n      ) : (\r\n        // sign up form\r\n        <form onSubmit={handleLogin}>\r\n          <label htmlFor=\"username\">Username:</label>\r\n          <InputText type=\"text\" id=\"username\" name=\"username\" />\r\n          <br />\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <InputText type=\"password\" id=\"password\" name=\"password\" />\r\n          <br />\r\n          <Button type=\"submit\">login</Button>{' '}\r\n          <Button type=\"button\" onClick={() => setExpanded(!expanded)}>\r\n            cancel\r\n          </Button>\r\n          <Button type=\"button\" onClick={() => setCreating(true)}>\r\n            Don't have an account? Click to create one\r\n          </Button>\r\n        </form>\r\n      )\r\n    ) : (\r\n      <Button type=\"button\" onClick={() => setExpanded(!expanded)}>\r\n        login\r\n      </Button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default UserForm;\r\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport Notification from './components/Notification';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\nimport UserForm from './components/UserForm';\nimport todoService from './services/todos';\n\nconst Div = styled.div`\n  margin: 1rem;\n  background: #fff;\n  max-width: 600px;\n  padding: 0;\n  border-radius: 15px;\n  box-shadow: 0px 5px 10px #000;\n`;\n\nconst H2 = styled.h2`\n  background: #dae0f2;\n  border-radius: 15px 15px 0 0;\n  border-bottom: 2px solid #004fff;\n  padding: 0.25rem 1rem;\n  box-shadow: 0px 4px 5px -4px #004fff;\n  text-shadow: 1px 2px 2px #aaa;\n`;\n\nconst DivInner = styled.div`\n  padding: 0.5rem 1rem;\n`;\n\nfunction App() {\n  useEffect(() => {\n    const userJson = window.localStorage.getItem('loggedTodoAppUser');\n    if (userJson) {\n      const token = JSON.parse(userJson).token;\n      todoService.setToken(token);\n    }\n  }, []);\n\n  return (\n    <Div>\n      <H2>Todo</H2>\n      <DivInner>\n        <Notification />\n        <UserForm />\n        <TodoForm />\n        <TodoList />\n      </DivInner>\n    </Div>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport todosReducer from './reducers/todosReducer';\r\nimport userReducer from './reducers/userReducer';\r\nimport notificationReducer from './reducers/notificationReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    todos: todosReducer,\r\n    user: userReducer,\r\n    notification: notificationReducer,\r\n  }),\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}